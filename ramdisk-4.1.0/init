#!/jb_init/sbin/bb/busybox sh
#
# AUTHORS:
# Stratosk: http://forum.xda-developers.com/showthread.php?t=1468795
# Mialwe: http://forum.xda-developers.com/showthread.php?t=1551410
#
# INITRAMFS STRUCTURE:
# /
#  -- /jb_init                (jb initramfs)
#  -- /files/modules
#  -- /files/hw/
# 

#APP='Semaphore.apk'

export _PATH="$PATH"
export PATH=/

#
# Set busybox location, save busybox as we will move directories
#

/jb_init/sbin/bb/busybox cp /jb_init/sbin/bb/recovery /busybox
BB="/busybox"

$BB cd /

#
# Initialize working dir and log
#

$BB date >>boot.txt
exec >>boot.txt 2>&1

$BB echo ""
$BB echo "#"
$BB echo "# INITRAMFS STRUCTURE:"
$BB echo "#"
$BB echo "#  -- /jb_init                (jb initramfs)"
$BB echo "#  -- /files/modules"
$BB echo "#  -- /files/hw/"
$BB echo "#"
$BB echo ""

$BB rm init

$BB echo "Generating mount directories ..."
$BB mkdir proc
$BB mkdir sys
$BB mkdir cache
$BB mkdir sdcard
$BB mkdir system
$BB mkdir data

$BB mkdir -p /dev/block

$BB echo "Generating device nodes ..."
$BB mknod /dev/block/mmcblk0 b 179 0
$BB mknod /dev/block/mmcblk0p10 b 259 2
$BB mknod /dev/block/mmcblk0p11 b 259 3
$BB mknod /dev/block/mmcblk0p12 b 259 4

$BB echo "Mounting devices ..."
$BB mount -t proc proc /proc
$BB mount -t sysfs sysfs /sys
$BB mount -t ext4 /dev/block/mmcblk0p10 /system

#
# Detailed Board Info
#

REV=`$BB cat /sys/board_properties/revision`
KV=`$BB uname -r`
$BB echo ""
$BB echo "KERNEL: $KV"
$BB echo "BOARD: $REV"
$BB echo -n "PATH: ";$BB echo $PATH
$BB echo -n "ROM: ";$BB cat /system/build.prop|$BB grep ro.build.display.id
$BB echo -n "BUSYBOX: ";$BB|$BB grep "BusyBox v"
$BB echo ""

if $BB [ ! -d /system/lib/modules ]; then 
    $BB echo ""    
    $BB echo "Making modules directory ..."
    $BB mkdir /system/lib/modules
    $BB chmod 777 /system/lib/modules
fi

if $BB [ "`/busybox grep $KV /system/lib/modules/ansi_cprng.ko`" ]; then
    $BB echo "kernel files already installed, nothing to do ... "
else
    $BB echo "Modules KO not found ... Updating modules ..."

    $BB rm -rf /system/lib/modules/*
    $BB cp /files/modules/* /system/lib/modules/

    #$BB echo "updating lights.aries.so..."
    #$BB mv /files/hw/* /system/lib/hw/
    #$BB chmod 644 /system/lib/hw/lights.aries.so

    $BB mount -t ext4 /dev/block/mmcblk0p12 /data    
    if $BB [ -f /data/local/logger.ko ]; then
	$BB echo ""
	$BB echo "Found /data/local/logger.ko, updating ..."
	$BB cp /system/lib/modules/logger.ko /data/local/logger.ko
    else
	$BB echo ""
	$BB echo "/data/local/logger.ko, Not found, skipping..."
    fi
    $BB umount /data
    
    if $BB [ ! -d /system/etc/init.d ]; then 
        $BB echo ""	
        $BB echo "Making init.d directory ..."
	$BB mkdir /system/etc/init.d
	$BB chmod 777 /system/etc/init.d
    fi

    #$BB echo "coping kernel control apk"
    #$BB rm /system/app/$APP
    #$BB rm /data/dalvik-cache/*$APP*

    #$BB cp /files/$APP /system/app/
    #$BB chown 0.0 /system/app/$APP
    #$BB chmod 644 /system/app/$APP
fi

$BB echo ""
$BB echo "Command line:"
$BB cat /proc/cmdline

$BB echo ""
$BB echo "Starting bootmode ramdisk tree creation ..."
$BB mv /jb_init/* /

$BB echo ""
$BB echo "Debug output:"
$BB echo "Current /:"
$BB ls -l /
$BB echo "Current /system:"
$BB ls -l /system/
$BB echo "Current /system/lib/modules:"
$BB ls -l /system/lib/modules/
$BB echo "Current /system/lib/hw:"
$BB ls -l /system/lib/hw/

$BB echo ""
$BB echo "Cleaning up ..."
$BB umount /sys
$BB umount /proc
$BB umount /system
$BB rm -r /files
$BB rm -r /sdcard

#
# Original initramfs directories not needed anymore,
# busybox not needed anymore...
#

$BB rm -rf /jb_init

$BB echo ""
$BB date >>boot.txt
$BB rm -rf /dev/*

#
# Finally remove busybox
#

$BB rm /busybox

export PATH="${_PATH}"
exec /init
